name: Auto Pull Bot

on:
  push:
    branches-ignore:
      - main  # Exclude 'main' branch from triggering the workflow
  workflow_dispatch:  # Allows manual triggering for testing

jobs:
  create-pull-request:
    runs-on: ubuntu-latest  # Use GitHub-hosted Ubuntu runner

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Extract branch name and log it (Bash for Ubuntu)
      - name: Get Branch Name
        run: |
          GITHUB_REF=${{ github.ref }}
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # Step 3: Ensure we're not on main
      - name: Ensure We're Not on Main
        run: |
          if [ "$BRANCH_NAME" = "main" ]; then
            echo "We are on the main branch; no pull request will be created."
            exit 0
          fi
          echo "Not on the main branch; proceeding."

      # Step 4: Fetch main branch and check if the current branch is behind
      - name: Check if Branch is Behind Main
        run: |
          git fetch origin main
          BEHIND=$(git rev-list --count HEAD..origin/main)
          echo "Branch is behind main by $BEHIND commits."
          echo "BEHIND=$BEHIND" >> $GITHUB_ENV
          if [ "$BEHIND" -le 0 ]; then
            echo "Branch is up to date with main; no pull request will be created."
            exit 0
          fi

      # Step 5: Check if a pull request already exists
      - name: Check if Pull Request Exists
        id: check_pr
        run: |
          PR_EXIST=$(gh pr list --head $BRANCH_NAME --base main --json number --jq '.[0].number')
          if [ -n "$PR_EXIST" ]; then
            echo "A pull request for branch '$BRANCH_NAME' already exists: https://github.com/${{ github.repository }}/pull/$PR_EXIST"
            echo "PR_EXIST=$PR_EXIST" >> $GITHUB_ENV
          else
            echo "No existing pull request found."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: Create a pull request only if none exists
      - name: Create Pull Request (if none exists)
        if: steps.check_pr.outputs.PR_EXIST == ''
        id: create_pr
        run: |
          echo "Creating a new pull request..."
          PR_OUTPUT=$(gh pr create \
            --title "Auto Pull Request - $BRANCH_NAME" \
            --body "Auto-generated PR to merge '$BRANCH_NAME' into 'main'" \
            --base main \
            --head "$BRANCH_NAME" \
            --repo "${{ github.repository }}")
          echo "PR_OUTPUT=$PR_OUTPUT" >> $GITHUB_ENV
          PR_URL=$(echo $PR_OUTPUT | grep -o 'http.*$')
          PR_NUMBER=$(echo $PR_URL | grep -o '[0-9]\+$')
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Add labels to the pull request (one at a time)
      - name: Add 'github_actions' Label
        run: |
          PR_NUMBER=$(if [ -n "$PR_EXIST" ]; then echo "$PR_EXIST"; else echo "$PR_NUMBER"; fi)
          gh pr edit $PR_NUMBER --add-label "github_actions"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add 'Auto Merge' Label
        run: |
          PR_NUMBER=$(if [ -n "$PR_EXIST" ]; then echo "$PR_EXIST"; else echo "$PR_NUMBER"; fi)
          gh pr edit $PR_NUMBER --add-label "Auto Merge"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
