name: Auto Pull Bot

on:
  push:
    branches-ignore:
      - main  # Exclude 'main' branch from triggering the workflow
  workflow_dispatch:  # Allows manual triggering of the workflow for testing

jobs:
  create-pull-request:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Step 2: Extract and log the current branch name
      - name: Get Branch Name
        id: get_branch
        run: |
          echo "Extracting branch name..."
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          echo "Current Branch: $BRANCH_NAME"
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      # Step 3: Ensure the current branch is not 'main'
      - name: Check Branch
        run: |
          if [[ "${{ env.BRANCH_NAME }}" == "main" ]]; then
            echo "No pull request created; currently on the main branch."
            exit 0
          fi

      # Step 4: Fetch the main branch and check if the current branch is behind
      - name: Check If Branch is Behind Main
        id: check_behind
        run: |
          echo "Fetching the main branch for comparison..."
          git fetch origin main
          BEHIND=$(git rev-list --count HEAD..origin/main)
          echo "Branch is behind main by $BEHIND commits."
          echo "BEHIND=$BEHIND" >> $GITHUB_ENV
          if [ "$BEHIND" -le 0 ]; then
            echo "No pull request created; branch is up to date with main."
            exit 0
          fi

      # Step 5: Check for existing pull request
      - name: Check for Existing Pull Request
        id: check_pr
        run: |
          echo "Checking for existing pull request..."
          PR_EXIST=$(gh pr list --head "${{ env.BRANCH_NAME }}" --base main --json number --jq '.[0].number')
          if [ -n "$PR_EXIST" ]; then
            echo "A pull request already exists: https://github.com/${{ github.repository }}/pull/$PR_EXIST"
            echo "PR_EXIST=$PR_EXIST" >> $GITHUB_ENV
            echo "No new pull request created."
            exit 0
          fi
          echo "No existing pull request found."

      # Step 6: Create a pull request only if none exists
      - name: Create Pull Request
        if: steps.check_pr.outputs.PR_EXIST == ''
        id: create_pr
        run: |
          echo "Creating a new pull request..."
          PR_OUTPUT=$(gh pr create \
            --title "Auto Pull Request - ${{ env.BRANCH_NAME }}" \
            --body "This pull request merges changes from '${{ env.BRANCH_NAME }}' into 'main'." \
            --base main \
            --head "${{ env.BRANCH_NAME }}" \
            --repo "${{ github.repository }}" \
            --label "Auto Merge" \
            || echo "Pull request creation failed")
          echo "$PR_OUTPUT"
          PR_URL=$(echo "$PR_OUTPUT" | grep -o 'http.*$')
          echo "PR_URL=$PR_URL" >> $GITHUB_ENV

      # Step 7: Notify about successful PR creation
      - name: Notify PR Creation
        if: steps.create_pr.outputs.PR_URL != ''
        run: |
          echo "Pull request created successfully: ${{ env.PR_URL }}"
